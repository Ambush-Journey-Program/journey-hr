{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "standard-with-typescript",
    "prettier",
    "plugin:jsx-a11y/recommended",
    "plugin:styled-components-a11y/recommended"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "prettier", "jsx-a11y", "styled-components-a11y"],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/consistent-type-imports": "off",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/triple-slash-reference": "off",
    "@typescript-eslint/consistent-indexed-object-style": "off",
    "@typescript-eslint/consistent-type-assertions": "warn",
    "@typescript-eslint/restrict-template-expressions": "warn",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/ban-ts-comment": "warn",

    "prettier/prettier": "error",
    "no-var": "error", // Disable usage of "var"
    "no-console": ["warn", { "allow": ["warn", "error"] }], // Show a warning when you forgot to remove all console.logs
    "import/no-unresolved": [2, { "commonjs": true, "amd": true }], // Don't allow import for unresolved packages or files.
    "import/prefer-default-export": "off",
    "react/jsx-filename-extension": [
      1,
      { "extensions": [".js", ".jsx", ".ts", ".tsx"] }
    ], // Tells which file extension is valid for a React Component.
    "react/react-in-jsx-scope": "off", // Newer versions of React don't need to import the package in every component
    "react/jsx-props-no-spreading": "off", // Disable the rule that does not allow usage of spreading inside a JSX Props.
    "react/prop-types": "off", // Disable the need for Prop Types on a React file
    "react-hooks/rules-of-hooks": "error", // Show errors when a Hook rule is broken,
    "react-hooks/exhaustive-deps": "warn"
  },
  "parser": "@typescript-eslint/parser",
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
