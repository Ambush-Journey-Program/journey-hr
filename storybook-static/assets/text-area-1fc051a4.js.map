{"version":3,"file":"text-area-1fc051a4.js","sources":["../../src/design-system/text-area/text-area.styled.ts","../../src/design-system/text-area/text-area.tsx"],"sourcesContent":["import { devices } from '@/styles/devices';\nimport styled, { css } from 'styled-components';\n\nimport { StyledProps, StyledLabelProps } from './types';\n\nconst error = css`\n  &:invalid {\n    color: ${(props) => props.theme.color.auxiliary.error};\n    + p {\n      display: block;\n    }\n  }\n`;\n\nexport const Label = styled.label<StyledLabelProps>`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 0.875rem;\n  line-height: 150%;\n  color: ${(props) => props.theme.color.contrasts.mediumContrast};\n\n  span {\n    color: ${(props) => props.theme.color.contrasts.lowContrast};\n  }\n`;\n\nexport const TextAreaContainer = styled.div<StyledProps>`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  min-width: 18rem;\n  color: ${(props) => props.theme.color.contrasts.highContrast};\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n`;\n\nexport const TextArea = styled.textarea<StyledProps>`\n  width: 100%;\n  resize: none;\n  font-family: 'Mundial', sans-serif;\n  font-weight: 300;\n  font-size: 1rem;\n  border: 1px solid ${(props) => props.theme.color.contrasts.lowestContrast};\n  border-radius: 0.75rem;\n  padding: 0.75rem 1.375rem;\n  margin-bottom: 0.25rem;\n  color: ${(props) => props.theme.color.contrasts.highContrast};\n\n  @media ${devices.mobile} {\n    padding: 0.75rem 1rem;\n    font-size: 0.875rem;\n  }\n\n  &::placeholder {\n    color: ${(props) => props.theme.color.contrasts.lowestContrast};\n\n    @media ${devices.mobile} {\n      font-size: 0.875rem;\n    }\n  }\n\n  &:focus-within {\n    outline: none;\n    box-shadow: 0 0 0.125rem\n      ${(props) => props.theme.color.contrasts.mediumContrast};\n    border: 1px solid ${(props) => props.theme.color.brandColors.purple};\n  }\n  & + p {\n    display: none;\n  }\n  ${({ internalTouched }) => internalTouched && error}\n`;\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport { Paragraphs } from '../typography/paragraphs/paragraphs';\nimport * as Styled from './text-area.styled';\nimport { TextAreaProps } from './types';\n\nexport function TextArea({\n  rows = 3,\n  spellCheck,\n  placeholder = 'Write the description',\n  onTextChange = () => {},\n  required = false,\n  touched = false,\n  label,\n  ...props\n}: TextAreaProps) {\n  const [internalTouched, setTouched] = useState(false);\n  const [error, setError] = useState('Description Required');\n\n  useEffect(() => {\n    setTouched(touched);\n  }, [touched]);\n\n  function onInputChange(e: ChangeEvent<HTMLTextAreaElement>) {\n    onTextChange(e.target.value);\n    setTouched(true);\n    handleValidationError(e.target.value);\n  }\n\n  function handleValidationError(value: string) {\n    if (value.length === 0) {\n      setError('Description Required');\n      return;\n    }\n    if (Boolean(props.minLength) && props.minLength >= value.length) {\n      setError(`Minimal length must be greater than ${props.minLength}`);\n    }\n  }\n\n  return (\n    <Styled.TextAreaContainer>\n      <Styled.Label htmlFor={`textArea-${label}`}>\n        {label} {required && <span>Required</span>}\n      </Styled.Label>\n      <Styled.TextArea\n        id={`textArea-${label}`}\n        placeholder={placeholder}\n        internalTouched={internalTouched}\n        onChange={onInputChange}\n        rows={rows}\n        spellCheck={spellCheck}\n        required={required}\n        {...props}\n      />\n\n      {internalTouched && (\n        <Paragraphs size=\"extrasmall\" fontWeight=\"light\" colorVariant=\"red\">\n          {error}\n        </Paragraphs>\n      )}\n    </Styled.TextAreaContainer>\n  );\n}\n"],"names":["error","css","props","Label","styled","TextAreaContainer","TextArea","devices","internalTouched","rows","spellCheck","placeholder","onTextChange","__name","required","touched","label","setTouched","useState","setError","useEffect","onInputChange","e","handleValidationError","value","jsxs","Styled.TextAreaContainer","Styled.Label","jsx","Styled.TextArea","Paragraphs"],"mappings":"mSAKA,MAAMA,EAAQC;AAAAA;AAAAA,aAEAC,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvCC,EAAQC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQhBF,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA;AAAA;AAAA,aAGpCA,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA;AAAA,EAIvCG,EAAoBD,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAM5BF,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA;AAAA;AAAA,EAKrCI,EAAWF,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMRF,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA,WAIjDA,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA;AAAA,WAEvCK,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMLL,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA;AAAA,aAEvCK,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQZL,GAAUA,EAAM,MAAM,MAAM,UAAU;AAAA,wBACtBA,GAAUA,EAAM,MAAM,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,IAK7D,CAAC,CAAE,gBAAAM,KAAsBA,GAAmBR;AAAA,ECrEzC,SAAAM,EAAA,CAAkB,KAAAG,EAAA,EAChB,WAAAC,EACP,YAAAC,EAAA,wBACc,aAAAC,EAAAC,EAAA,IAAA,CACO,EADP,gBACQ,SAAAC,EAAA,GACX,QAAAC,EAAA,GACD,MAAAC,EACV,GAAAd,CAEF,EAAA,CACE,KAAA,CAAAM,EAAAS,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAlB,EAAAmB,CAAA,EAAAD,EAAA,SAAA,sBAAA,EAEAE,EAAAA,UAAA,IAAA,CACEH,EAAAF,CAAA,CAAkB,EAAA,CAAAA,CAAA,CAAA,EAGpB,SAAAM,EAAAC,EAAA,CACEV,EAAAU,EAAA,OAAA,KAAA,EACAL,EAAA,EAAA,EACAM,EAAAD,EAAA,OAAA,KAAA,CAAoC,CAHtCT,EAAAQ,EAAA,iBAMA,SAAAE,EAAAC,EAAA,CACE,GAAAA,EAAA,SAAA,EAAA,CACEL,EAAA,sBAAA,EACA,MAAA,CAEF,QAAAjB,EAAA,SAAA,GAAAA,EAAA,WAAAsB,EAAA,QACEL,EAAA,uCAAAjB,EAAA,WAAA,CACF,CAPF,OAAAW,EAAAU,EAAA,yBAUAE,EAAAC,EAAA,CAAA,SAAA,CAEID,EAAAE,EAAA,CAAA,QAAA,YAAAX,IAAA,SAAA,CACGA,EAAA,IAAMF,GAAAc,EAAA,OAAA,CAAA,SAAA,UAAA,CAAA,CAA4B,EAAA,EACrCA,EACAC,EAAQ,CAAP,GAAA,YAAAb,IACiB,YAAAL,EAChB,gBAAAH,EACA,SAAAa,EACU,KAAAZ,EACV,WAAAC,EACA,SAAAI,EACA,GAAAZ,CACI,CAAA,EACNM,GAAAoB,EAAAE,EAAA,CAAA,KAAA,aAAA,WAAA,QAAA,aAAA,MAAA,SAAA9B,CAAA,CAAA,CAKE,CAAA,CAAA,CAIR,CAxDOa,EAAAP,EAAA"}